apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId APPLICATION_ID
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : APPLICATION_ID,
                JSHARE_PKGNAME: APPLICATION_ID,
                JPUSH_APPKEY  : JPUSH_APPKEY, //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : JPUSH_CHANNEL, //暂时填写默认值即可.
                TENCENT_APPID : TENCENT_APPID//腾讯开放平台注册应用得到的 appId
        ]
        buildConfigField("String", "API_HOST", "\"http://app.dev.gc.xf.io/\"")

        multiDexEnabled true

    }

    flavorDimensions "myflavor"
    productFlavors {
        allchannel {
            dimension "myflavor"
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher"]
        }

        yingyongbao {
            dimension "myflavor"
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher2"]
        }
    }

    signingConfigs {
        config {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            //配置应用签名
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            //关闭混淆
            minifyEnabled false
            //混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'commons-codec:commons-codec:1.10'
    compile 'cn.finalteam.rxgalleryfinal:library:1.0.9'
    compile 'com.aliyun.dpa:oss-android-sdk:2.4.5'
    implementation(name: 'xalle_android-release', ext: 'aar')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    //gson
    compile 'com.google.code.gson:gson:2.8.0'

    //OKhttp
    compile 'com.zhy:okhttputils:2.6.2'

    //butterknife  以下写法结局 butterknife  dagger 冲突
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    //dagger  以下写法结局 butterknife  dagger 冲突
    compile 'com.google.dagger:dagger:2.4'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.4'
    compile 'org.glassfish:javax.annotation:10.0-b28'
    testCompile 'junit:junit:4.12'
    compile project(path: ':matisse')

    //    compile files('libs/commons-codec-1.10.jar')/
    implementation files('libs/xalle.jar')
    implementation 'cn.jiguang.sdk:jshare:1.3.0'

    // 此处以 JShare 1.3.0 版本为例，具体版本请参考压缩包 libs 的 jar 包版本。
    implementation 'cn.jiguang.sdk:jshare-qqmodel:1.3.0'

    // 此处以 jshare-qqmodel 1.3.0 版本为例，具体版本请参考压缩包 libs 的 jar 包版本。
    implementation 'cn.jiguang.sdk:jshare-wechatmodel:1.3.0'

    // 此处以 jshare-wechatmodel 1.3.0 版本为例，具体版本请参考压缩包 libs 的 jar 包版本。

    //    implementation 'cn.jiguang.sdk:jshare-sinamodel:1.3.0'  // 此处以 jshare-sinamodel 1.3.0 版本为例，具体版本请参考压缩包 libs 的 jar 包版本。
    implementation 'cn.jiguang.sdk:jcore:1.1.5'

    // 此处以 JCore 1.1.5 版本为例，具体版本请参考压缩包 libs 的 jar 包版本。
    compile 'cn.jiguang.sdk:jpush:3.1.1'

    // 此处以JPush 3.1.1 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.1.9'

    //kotlin 拓展库
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // 此处以JCore 1.1.9 版本为例。
    compile 'org.greenrobot:eventbus:3.1.1'

    //retrofit 网络框架
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    //播放框架
    compile 'com.shuyu:gsyVideoPlayer-java:4.0.0-beat1'
    compile 'com.shuyu:gsyVideoPlayer-armv7a:4.0.0-beat1'

    //65K方法
    compile 'com.android.support:multidex:1.0.1'

    //图片查看器
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.5.0'

    //Bugly崩溃日志
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'

    //谷歌权限框架 https://github.com/googlesamples/easypermissions
    implementation 'pub.devrel:easypermissions:1.0.1'
    implementation files('src/main/libs/did.jar')

    //FlexboxLayout
    compile 'com.google.android:flexbox:0.2.5'

    //华为推送
    String HMSSDKVer = '2.6.0.301'
    compile 'com.huawei.android.hms:push:' + HMSSDKVer
    implementation files('libs/MiPush_SDK_Client_3_6_2.jar')
//    implementation(name: 'UpsPushSDKLib-release-2.0.0', ext: 'aar')

    compile 'com.meizu.flyme.internet:push-internal:3.6.0@aar'
    compile 'com.android.support:cardview-v7:25.3.1'

    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-3'
    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-3'//没有使用特殊Header，可以不加这行


    api "com.android.support:design:25.3.1"
}
repositories {
    mavenCentral()
}


def getBuildDate() {
    return new Date().format('yyyy-MM-dd-HH-mm')
}